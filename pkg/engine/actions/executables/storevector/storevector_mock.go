// Code generated by MockGen. DO NOT EDIT.
// Source: storevector.go
//
// Generated by this command:
//
//	mockgen -source storevector.go -destination storevector_mock.go -package storevector
//

// Package storevector is a generated GoMock package.
package storevector

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockstoreVectorIntegration is a mock of storeVectorIntegration interface.
type MockstoreVectorIntegration struct {
	ctrl     *gomock.Controller
	recorder *MockstoreVectorIntegrationMockRecorder
}

// MockstoreVectorIntegrationMockRecorder is the mock recorder for MockstoreVectorIntegration.
type MockstoreVectorIntegrationMockRecorder struct {
	mock *MockstoreVectorIntegration
}

// NewMockstoreVectorIntegration creates a new mock instance.
func NewMockstoreVectorIntegration(ctrl *gomock.Controller) *MockstoreVectorIntegration {
	mock := &MockstoreVectorIntegration{ctrl: ctrl}
	mock.recorder = &MockstoreVectorIntegrationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockstoreVectorIntegration) EXPECT() *MockstoreVectorIntegrationMockRecorder {
	return m.recorder
}

// StoreVectors mocks base method.
func (m *MockstoreVectorIntegration) StoreVectors(vectors []float32, fields map[string]any, options map[string]string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreVectors", vectors, fields, options)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreVectors indicates an expected call of StoreVectors.
func (mr *MockstoreVectorIntegrationMockRecorder) StoreVectors(vectors, fields, options any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreVectors", reflect.TypeOf((*MockstoreVectorIntegration)(nil).StoreVectors), vectors, fields, options)
}

// Type mocks base method.
func (m *MockstoreVectorIntegration) Type() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Type")
	ret0, _ := ret[0].(string)
	return ret0
}

// Type indicates an expected call of Type.
func (mr *MockstoreVectorIntegrationMockRecorder) Type() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Type", reflect.TypeOf((*MockstoreVectorIntegration)(nil).Type))
}
