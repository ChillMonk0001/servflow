// Code generated by MockGen. DO NOT EDIT.
// Source: fetchvector.go
//
// Generated by this command:
//
//	mockgen -source fetchvector.go -destination fetchvector_mock.go -package fetchvector
//

// Package fetchvector is a generated GoMock package.
package fetchvector

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockfetchVectorIntegration is a mock of fetchVectorIntegration interface.
type MockfetchVectorIntegration struct {
	ctrl     *gomock.Controller
	recorder *MockfetchVectorIntegrationMockRecorder
}

// MockfetchVectorIntegrationMockRecorder is the mock recorder for MockfetchVectorIntegration.
type MockfetchVectorIntegrationMockRecorder struct {
	mock *MockfetchVectorIntegration
}

// NewMockfetchVectorIntegration creates a new mock instance.
func NewMockfetchVectorIntegration(ctrl *gomock.Controller) *MockfetchVectorIntegration {
	mock := &MockfetchVectorIntegration{ctrl: ctrl}
	mock.recorder = &MockfetchVectorIntegrationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockfetchVectorIntegration) EXPECT() *MockfetchVectorIntegrationMockRecorder {
	return m.recorder
}

// FetchVector mocks base method.
func (m *MockfetchVectorIntegration) FetchVector(inputVector []float32, options map[string]any) ([]map[string]any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchVector", inputVector, options)
	ret0, _ := ret[0].([]map[string]any)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchVector indicates an expected call of FetchVector.
func (mr *MockfetchVectorIntegrationMockRecorder) FetchVector(inputVector, options any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchVector", reflect.TypeOf((*MockfetchVectorIntegration)(nil).FetchVector), inputVector, options)
}

// Type mocks base method.
func (m *MockfetchVectorIntegration) Type() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Type")
	ret0, _ := ret[0].(string)
	return ret0
}

// Type indicates an expected call of Type.
func (mr *MockfetchVectorIntegrationMockRecorder) Type() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Type", reflect.TypeOf((*MockfetchVectorIntegration)(nil).Type))
}
